c
@daily
c
@daily.order('date DESC')
@daily = @daily ? @daily : params[:user].dailies
params[:user]
 @daily
\ @daily
c
@daily = @daily ? @daily : params[:user].dailies
params[:user]
@daily
c
params[:user].dailies
params[:user]
params
current_user
@daily
c
@daily
current_user
params
c
@daily
c
attachments["daily_#{@user.dailies.count}"] = WickedPdf.new.pdf_from_string(render_to_string(pdf: 'daily', template: 'dailies/index', layout: 'pdf'))
mail(to: user.email, subject: 'Your todo PDF is attached', user: user)
attachments["daily_#{@user.dailies.count}"] = WickedPdf.new.pdf_from_string(render_to_string(pdf: 'daily', template: 'dailies/index', layout: 'pdf'))
@user = params[:user]
c
attachments["daily_#{@user.dailies.count}"] = WickedPdf.new.pdf_from_string(render_to_string(pdf: 'daily', template: 'dailies/index.pdf.erb', layout: 'pdf.html'))
cc
attachments["daily_#{current_user.dailies.count}"] = WickedPdf.new.pdf_from_string(render_to_string(pdf: 'daily', template: 'dailies/index.pdf.erb', layout: 'pdf.html'))
@user = params[:user]
c
current_user
user: current_user
UserMailer.with(user: current_user).send_daily.deliver_now
current_user
c
attachments["daily_#{@daily.count}"] = WickedPdf.new.pdf_from_string( render_to_string(pdf: 'daily', template: 'dailies/index.pdf.erb', layout: 'pdf.html'))
attachments["daily_#{@daily.count}"] = WickedPdf.new.pdf_from_string( render_to_string(pdf: 'daily', template: 'dailies/index.pdf.erb', layout: 'pdf.html')
attachments["daily_#{@daily.count}"] = WickedPdf.new.pdf_from_string( 20: render_to_string(pdf: 'daily', template: 'dailies/index.pdf.erb', layout: 'pdf.html')
   21:     )
   20: render_to_string(pdf: 'daily', template: 'dailies/index.pdf.erb', layout: 'pdf.html')
attachments["daily_#{@daily.count}"] = WickedPdf.new.pdf_from_string(
@user = params[:user]
c
UserMailer.with(user: current_user).send_daily.deliver_now
c
current_user.dailies
current_user
params[:id]
params
c
params[:id]
params
c
params[:daily]
params
c
@monthly
 @remaining = current_user.salary.present? ? (current_user.salary - check_limit) : "Nil"
current_user.salary
check_limit
c
self.class
daily: self
self
c
self
c
@monthly
c
@monthly
check_limit 
c
current_user.salary < @monthly
@monthly = current_user.dailies.map{|x| x.expenses}.sum
current_user
c
check_limit
@daily = check_limit
@monthly
c
Daily.find(params[:id])
@daily = Daily.find(params[:id])
Daily.find(params[:id])
params[:id]
params
c
params
c
params
c
@daily = Daily.find(params[:id])
Daily.find(params[:id])
params
c
users_params
c
users_params
c
params
users_params
cusers_params
c
@user
@user = current_user.update(users_params)
c
params.require(:user).permit(:salary)
params.require(:users).permit(:salary)
params
users_params
c
params
users_params
current_user.update(users_params)
users_params
c
users_params
params
@user = current_user
current_user
c
current_user
@user
c
current_user
@daily = Daily.first.user.update(params[:salary])
Daily.first.user.update(params[:salary])
params
params[:salary]
c
Daily.first.user.update(users_params)
users_params
params
c
params
c
params
c
params
c
users_params
params
c
users_param
users_params
c
current_user.dailies
current_user
c
params
c
users
user
@daily = Daily.users.find(params[:id])
Daily.users.find(params[:id])
c
Daily.current_user.find(params[:id])
params[:id]
params
c
User.find(params[:id])
params[:id]
params
c
 Daily.find(params[:id])
params[:id]
(params[:id]
params
c
params
@salary
salary
c
params
current_user.salary
current_user,salary
current_user
c
@daily = Daily.find(params[:id])
Daily.find(params[:id])
@daily
params
c
params
@users
c
@user
c
@user
params
@user
c
@daily.cexpenses
@daily.expenses
@daily.expences
@daily
params
whereami
whereiam
whereami
c
params
daily_params
@daily = current_user.dailies.new(daily_params)
current_user.dailies.new(daily_params)
daily_params
@daily = current_user.dailies.new(daily_params)
@daily 
current_user.dailies.new(daily_params)
params
c
@daily.save
@daily = current_user.dailies.new(daily_params)
current_user.dailies.new(daily_params)
params
c
current_user.dailies.new(daily_params)
@daily 
current_user.dailies.new(daily_params)
params
c
current_user.dailies.new(params[:daily].permit(:date, :expenses, :details))
@daily
params
c
Daily.new(daily_params)
@daily
params
c
Daily.new
@daily
daily_params
@daily.save
daily_params
c
@cart_item.destroy
CartItem.find(13)
@cart_item.destroy
@cart_item
@cart_item.destroy
@cart_item = CartItem.find_by(id: params[:cart_item_id])
c
@cart_item.quantity -= 1
@cart_item.quantity
params
c
@cart_item.increment :quantity, -1
@cart_item.increment
cart_item = @cart.cart_items.find(params[:id])
params
param
c
